namespace Book_A_Desk.Api.Tests

open Amazon.DynamoDBv2

// This mock is required because we fetch it through the dependency injection system to create the DynamoDbEventStore

type MockAmazonDynamoDB () =
    interface IAmazonDynamoDB with
        member this.BatchExecuteStatementAsync(request, cancellationToken) = failwith "todo"
        member this.BatchGetItemAsync(requestItems, returnConsumedCapacity, cancellationToken) = failwith "todo"
        member this.BatchGetItemAsync(requestItems: System.Collections.Generic.Dictionary<string,Model.KeysAndAttributes>, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.BatchGetItemResponse> = failwith "todo"
        member this.BatchGetItemAsync(request: Model.BatchGetItemRequest, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.BatchGetItemResponse> = failwith "todo"
        member this.BatchWriteItemAsync(requestItems: System.Collections.Generic.Dictionary<string,System.Collections.Generic.List<Model.WriteRequest>>, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.BatchWriteItemResponse> = failwith "todo"
        member this.BatchWriteItemAsync(request: Model.BatchWriteItemRequest, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.BatchWriteItemResponse> = failwith "todo"
        member this.Config = failwith "todo"
        member this.CreateBackupAsync(request, cancellationToken) = failwith "todo"
        member this.CreateGlobalTableAsync(request, cancellationToken) = failwith "todo"
        member this.CreateTableAsync(tableName, keySchema, attributeDefinitions, provisionedThroughput, cancellationToken) = failwith "todo"
        member this.CreateTableAsync(request, cancellationToken) = failwith "todo"
        member this.DeleteBackupAsync(request, cancellationToken) = failwith "todo"
        member this.DeleteItemAsync(tableName, key, cancellationToken) = failwith "todo"
        member this.DeleteItemAsync(tableName, key, returnValues, cancellationToken) = failwith "todo"
        member this.DeleteItemAsync(request, cancellationToken) = failwith "todo"
        member this.DeleteTableAsync(tableName: string, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.DeleteTableResponse> = failwith "todo"
        member this.DeleteTableAsync(request: Model.DeleteTableRequest, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.DeleteTableResponse> = failwith "todo"
        member this.DescribeBackupAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeContinuousBackupsAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeContributorInsightsAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeEndpointsAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeExportAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeGlobalTableAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeGlobalTableSettingsAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeKinesisStreamingDestinationAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeLimitsAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeTableAsync(tableName: string, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.DescribeTableResponse> = failwith "todo"
        member this.DescribeTableAsync(request: Model.DescribeTableRequest, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.DescribeTableResponse> = failwith "todo"
        member this.DescribeTableReplicaAutoScalingAsync(request, cancellationToken) = failwith "todo"
        member this.DescribeTimeToLiveAsync(tableName: string, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.DescribeTimeToLiveResponse> = failwith "todo"
        member this.DescribeTimeToLiveAsync(request: Model.DescribeTimeToLiveRequest, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.DescribeTimeToLiveResponse> = failwith "todo"
        member this.DisableKinesisStreamingDestinationAsync(request, cancellationToken) = failwith "todo"
        member this.Dispose() = failwith "todo"
        member this.EnableKinesisStreamingDestinationAsync(request, cancellationToken) = failwith "todo"
        member this.ExecuteStatementAsync(request, cancellationToken) = failwith "todo"
        member this.ExecuteTransactionAsync(request, cancellationToken) = failwith "todo"
        member this.ExportTableToPointInTimeAsync(request, cancellationToken) = failwith "todo"
        member this.GetItemAsync(tableName, key, cancellationToken) = failwith "todo"
        member this.GetItemAsync(tableName, key, consistentRead, cancellationToken) = failwith "todo"
        member this.GetItemAsync(request, cancellationToken) = failwith "todo"
        member this.ListBackupsAsync(request, cancellationToken) = failwith "todo"
        member this.ListContributorInsightsAsync(request, cancellationToken) = failwith "todo"
        member this.ListExportsAsync(request, cancellationToken) = failwith "todo"
        member this.ListGlobalTablesAsync(request, cancellationToken) = failwith "todo"
        member this.ListTablesAsync(cancellationToken) = failwith "todo"
        member this.ListTablesAsync(exclusiveStartTableName: string, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.ListTablesResponse> = failwith "todo"
        member this.ListTablesAsync(exclusiveStartTableName, limit, cancellationToken) = failwith "todo"
        member this.ListTablesAsync(limit: int, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.ListTablesResponse> = failwith "todo"
        member this.ListTablesAsync(request: Model.ListTablesRequest, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.ListTablesResponse> = failwith "todo"
        member this.ListTagsOfResourceAsync(request, cancellationToken) = failwith "todo"
        member this.Paginators = failwith "todo"
        member this.PutItemAsync(tableName, item, cancellationToken) = failwith "todo"
        member this.PutItemAsync(tableName, item, returnValues, cancellationToken) = failwith "todo"
        member this.PutItemAsync(request, cancellationToken) = failwith "todo"
        member this.QueryAsync(request, cancellationToken) = failwith "todo"
        member this.RestoreTableFromBackupAsync(request, cancellationToken) = failwith "todo"
        member this.RestoreTableToPointInTimeAsync(request, cancellationToken) = failwith "todo"
        member this.ScanAsync(tableName: string, attributesToGet: System.Collections.Generic.List<string>, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.ScanResponse> = failwith "todo"
        member this.ScanAsync(tableName: string, scanFilter: System.Collections.Generic.Dictionary<string,Model.Condition>, cancellationToken: System.Threading.CancellationToken): System.Threading.Tasks.Task<Model.ScanResponse> = failwith "todo"
        member this.ScanAsync(tableName, attributesToGet, scanFilter, cancellationToken) = failwith "todo"
        member this.ScanAsync(request, cancellationToken) = failwith "todo"
        member this.TagResourceAsync(request, cancellationToken) = failwith "todo"
        member this.TransactGetItemsAsync(request, cancellationToken) = failwith "todo"
        member this.TransactWriteItemsAsync(request, cancellationToken) = failwith "todo"
        member this.UntagResourceAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateContinuousBackupsAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateContributorInsightsAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateGlobalTableAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateGlobalTableSettingsAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateItemAsync(tableName, key, attributeUpdates, cancellationToken) = failwith "todo"
        member this.UpdateItemAsync(tableName, key, attributeUpdates, returnValues, cancellationToken) = failwith "todo"
        member this.UpdateItemAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateTableAsync(tableName, provisionedThroughput, cancellationToken) = failwith "todo"
        member this.UpdateTableAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateTableReplicaAutoScalingAsync(request, cancellationToken) = failwith "todo"
        member this.UpdateTimeToLiveAsync(request, cancellationToken) = failwith "todo"

